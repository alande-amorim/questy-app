{
  "openapi": "3.0.0",
  "paths": {
    "/auth/me": {
      "get": {
        "operationId": "AuthController_me",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Current user details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sub": {
                      "type": "string",
                      "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "email": {
                      "type": "string",
                      "example": "user@example.com"
                    },
                    "name": { "type": "string", "example": "John Doe" },
                    "email_verified": { "type": "boolean", "example": true },
                    "cognito": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "example": "user@example.com"
                        },
                        "groups": {
                          "type": "array",
                          "items": { "type": "string" },
                          "example": []
                        }
                      }
                    },
                    "dbUser": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "email": {
                          "type": "string",
                          "example": "user@example.com"
                        },
                        "name": { "type": "string", "example": "John Doe" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [{ "access-token": [] }],
        "summary": "Get current user",
        "tags": ["auth"]
      }
    },
    "/auth/signup": {
      "post": {
        "operationId": "AuthController_signUp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "user@example.com" },
                  "password": { "type": "string", "example": "password123" },
                  "name": { "type": "string", "example": "John Doe" }
                },
                "required": ["email", "password", "name"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User successfully registered" },
          "400": { "description": "Invalid input data" }
        },
        "summary": "Sign up a new user with Cognito",
        "tags": ["auth"]
      }
    },
    "/auth/signup/confirm": {
      "post": {
        "operationId": "AuthController_confirmSignUp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "user@example.com" },
                  "code": { "type": "string", "example": "123456" }
                },
                "required": ["email", "code"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Signup successfully confirmed" },
          "400": { "description": "Invalid verification code" }
        },
        "summary": "Confirm user signup with verification code",
        "tags": ["auth"]
      }
    },
    "/auth/signin": {
      "post": {
        "operationId": "AuthController_signIn",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SigninRequestDTO" }
            }
          }
        },
        "responses": { "200": { "description": "Sign in successful" } },
        "summary": "Sign in with Cognito credentials",
        "tags": ["auth"]
      }
    },
    "/projects": {
      "post": {
        "operationId": "ProjectsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateProjectDTO" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectResponseDTO" }
              }
            }
          }
        },
        "security": [{ "access-token": [] }],
        "summary": "Create a new project",
        "tags": ["projects"]
      },
      "get": {
        "operationId": "ProjectsController_findMany",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ProjectResponseDTO" }
                }
              }
            }
          }
        },
        "security": [{ "access-token": [] }],
        "summary": "Get all projects",
        "tags": ["projects"]
      }
    },
    "/projects/{id}": {
      "get": {
        "operationId": "ProjectsController_findById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do projeto a ser atualizado",
            "schema": { "example": "123e4567-e89b-12d3-a456-426614174000" }
          }
        ],
        "responses": {
          "200": {
            "description": "Project found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectResponseDTO" }
              }
            }
          },
          "404": { "description": "Project not found" }
        },
        "security": [{ "access-token": [] }],
        "summary": "Get a project by ID",
        "tags": ["projects"]
      },
      "put": {
        "operationId": "ProjectsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do projeto a ser atualizado",
            "schema": { "example": "123e4567-e89b-12d3-a456-426614174000" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateProjectDTO" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectResponseDTO" }
              }
            }
          },
          "404": { "description": "Project not found" }
        },
        "security": [{ "access-token": [] }],
        "summary": "Update a project",
        "tags": ["projects"]
      },
      "delete": {
        "operationId": "ProjectsController_delete",
        "parameters": [],
        "responses": {
          "200": { "description": "Project deleted successfully" },
          "404": { "description": "Project not found" }
        },
        "security": [{ "access-token": [] }],
        "summary": "Delete a project",
        "tags": ["projects"]
      }
    },
    "/projects/invites": {
      "post": {
        "description": "Cria um convite para um usuário participar de um projeto. O convite será enviado por email.",
        "operationId": "InviteController_createInvite",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateInviteDTO" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Convite criado com sucesso",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InviteResponseDTO" }
              }
            }
          },
          "401": { "description": "Usuário não autenticado" },
          "404": { "description": "Projeto não encontrado" }
        },
        "security": [{ "access-token": [] }],
        "summary": "Convidar um usuário para um projeto",
        "tags": ["Project Invites"]
      }
    },
    "/projects/invites/accept": {
      "post": {
        "description": "Aceita um convite para participar de um projeto. Se o usuário não existir, ele será criado.",
        "operationId": "InviteController_acceptInvite",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AcceptInviteDTO" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Convite aceito com sucesso",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponseDTO" }
              }
            }
          },
          "400": { "description": "Dados inválidos" },
          "404": { "description": "Convite inválido ou expirado" }
        },
        "summary": "Aceitar um convite para um projeto",
        "tags": ["Project Invites"]
      }
    },
    "/projects/{projectId}/tasks": {
      "post": {
        "operationId": "TasksController_create",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateTaskDTO" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskResponseDTO" }
              }
            }
          }
        },
        "security": [{ "access-token": [] }],
        "summary": "Create a new task in a project",
        "tags": ["tasks"]
      },
      "get": {
        "operationId": "TasksController_findMany",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TaskResponseDTO" }
                }
              }
            }
          }
        },
        "security": [{ "access-token": [] }],
        "summary": "Get all tasks from a project",
        "tags": ["tasks"]
      }
    },
    "/projects/{projectId}/tasks/{id}": {
      "get": {
        "operationId": "TasksController_findOne",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskResponseDTO" }
              }
            }
          }
        },
        "security": [{ "access-token": [] }],
        "summary": "Get a task by id from a project",
        "tags": ["tasks"]
      },
      "put": {
        "operationId": "TasksController_update",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateTaskDTO" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskResponseDTO" }
              }
            }
          }
        },
        "security": [{ "access-token": [] }],
        "summary": "Update a task in a project",
        "tags": ["tasks"]
      },
      "delete": {
        "operationId": "TasksController_remove",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "security": [{ "access-token": [] }],
        "summary": "Delete a task from a project",
        "tags": ["tasks"]
      }
    }
  },
  "info": {
    "title": "Questy API",
    "description": "API documentation for Questy",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    { "name": "auth", "description": "" },
    { "name": "projects", "description": "" },
    { "name": "Project Invites", "description": "" },
    { "name": "tasks", "description": "" }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "access-token": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "Authorization",
        "description": "Enter JWT token (Bearer <token>)",
        "in": "header"
      }
    },
    "schemas": {
      "SigninRequestDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email address",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "secret"
          }
        },
        "required": ["email", "password"]
      },
      "CreateProjectDTO": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Project code",
            "example": "PRJ",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Project name",
            "example": "My Project"
          },
          "description": {
            "type": "string",
            "description": "Project description",
            "example": "A great project"
          }
        },
        "required": ["code", "name", "description"]
      },
      "ProjectResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Project ID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "code": {
            "type": "string",
            "description": "Project code",
            "example": "PRJ"
          },
          "name": {
            "type": "string",
            "description": "Project name",
            "example": "My Project"
          },
          "description": {
            "type": "string",
            "description": "Project description",
            "example": "A project description"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Project creation date",
            "example": "2024-03-20T10:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Project last update date",
            "example": "2024-03-20T10:00:00Z"
          },
          "tasks": {
            "description": "Project tasks",
            "example": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "title": "Task 1",
                "description": "Task description",
                "status": "BACKLOG",
                "createdAt": "2025-03-27T14:06:17.807Z",
                "updatedAt": "2025-03-27T14:06:17.807Z"
              }
            ],
            "type": "array",
            "items": { "type": "array" }
          },
          "users": {
            "description": "Project users",
            "example": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "name": "John Doe",
                "cognitoSub": "123e4567-e89b-12d3-a456-426614174000",
                "email": "john.doe@example.com",
                "createdAt": "2025-03-27T14:06:17.807Z",
                "updatedAt": "2025-03-27T14:06:17.807Z"
              }
            ],
            "type": "array",
            "items": { "type": "array" }
          },
          "_count": {
            "type": "object",
            "description": "Project counts",
            "example": { "tasks": 10, "users": 2 }
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "createdAt",
          "updatedAt",
          "tasks",
          "users",
          "_count"
        ]
      },
      "UpdateProjectDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Project name",
            "example": "My Updated Project"
          },
          "description": {
            "type": "string",
            "description": "Project description",
            "example": "An updated project description"
          }
        }
      },
      "CreateInviteDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email do usuário a ser convidado",
            "example": "user@example.com"
          },
          "projectId": {
            "type": "string",
            "description": "ID do projeto",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": ["email", "projectId"]
      },
      "InviteResponseDTO": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "description": "ID do projeto",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "userId": {
            "type": "string",
            "description": "ID do usuário",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "inviteToken": {
            "type": "string",
            "description": "Token do convite",
            "example": "abc123def456"
          },
          "invitedBy": {
            "type": "string",
            "description": "ID do usuário que enviou o convite",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "invitedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data em que o convite foi enviado",
            "example": "2024-03-25T10:00:00Z"
          },
          "acceptedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data em que o convite foi aceito",
            "example": "2024-03-25T10:00:00Z"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data de criação do registro",
            "example": "2024-03-25T10:00:00Z"
          }
        },
        "required": ["projectId", "userId", "createdAt"]
      },
      "AcceptInviteDTO": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token do convite",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "description": "Nome do usuário",
            "example": "John Doe"
          },
          "password": {
            "type": "string",
            "description": "Senha do usuário",
            "example": "secret"
          }
        },
        "required": ["token", "name", "password"]
      },
      "UserResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do usuário",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "cognitoSub": {
            "type": "string",
            "description": "ID do usuário no Cognito",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "description": "Nome do usuário",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "Email do usuário",
            "example": "john@example.com"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data de criação do usuário",
            "example": "2024-03-25T10:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data da última atualização do usuário",
            "example": "2024-03-25T10:00:00Z"
          }
        },
        "required": ["id", "name", "email", "createdAt", "updatedAt"]
      },
      "CreateTaskDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Implement feature X"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Detailed description of the task"
          },
          "status": {
            "type": "string",
            "description": "Task status",
            "example": "BACKLOG",
            "enum": ["BACKLOG", "DOING", "DONE"]
          },
          "storyPoints": {
            "type": "number",
            "description": "Story points",
            "example": 5
          },
          "assigneeId": {
            "type": "string",
            "description": "Assignee ID",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "nullable": true
          },
          "reporterId": {
            "type": "string",
            "description": "Reporter ID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": [
          "title",
          "description",
          "status",
          "storyPoints",
          "assigneeId",
          "reporterId"
        ]
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "John Doe"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "User created at",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "User updated at",
            "example": "2021-01-01T00:00:00.000Z"
          }
        },
        "required": ["id", "email", "name", "createdAt", "updatedAt"]
      },
      "TaskResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Task ID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "code": {
            "type": "string",
            "description": "Task code",
            "example": "PRJ-001"
          },
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Implement feature X"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Detailed description of the task"
          },
          "status": {
            "type": "string",
            "description": "Task status",
            "example": "BACKLOG",
            "enum": ["BACKLOG", "DOING", "DONE"]
          },
          "storyPoints": {
            "type": "number",
            "description": "Story points",
            "example": 5
          },
          "projectId": {
            "type": "string",
            "description": "Project ID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "assigneeId": {
            "type": "string",
            "description": "Assignee ID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "reporterId": {
            "type": "string",
            "description": "Reporter ID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Task creation date",
            "example": "2024-03-20T10:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Task last update date",
            "example": "2024-03-20T10:00:00Z"
          },
          "assignee": {
            "description": "Assignee",
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/UserDTO" }]
          },
          "reporter": {
            "description": "Reporter",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/UserDTO" }]
          }
        },
        "required": [
          "id",
          "code",
          "title",
          "description",
          "status",
          "storyPoints",
          "projectId",
          "reporterId",
          "createdAt",
          "updatedAt",
          "reporter"
        ]
      },
      "UpdateTaskDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Updated task title"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Updated task description"
          },
          "status": {
            "type": "string",
            "description": "Task status",
            "example": "BACKLOG",
            "enum": ["BACKLOG", "DOING", "DONE"]
          },
          "storyPoints": {
            "type": "number",
            "description": "Story points",
            "example": 5
          },
          "assigneeId": {
            "type": "string",
            "description": "Assignee ID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "reporterId": {
            "type": "string",
            "description": "Reporter ID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        }
      }
    }
  }
}
